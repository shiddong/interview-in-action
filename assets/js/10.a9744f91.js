(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{484:function(t,s,a){t.exports=a.p+"assets/img/image-20200903014440034.7da9f0e6.png"},485:function(t,s,a){t.exports=a.p+"assets/img/image-20200903015703657.a798dbe1.png"},506:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("a",{attrs:{href:"https://leetcode-cn.com/leetbook/read/hash-table",target:"_blank",rel:"noopener noreferrer"}},[t._v("哈希表"),n("OutboundLink")],1),t._v("（Hash Table，也叫散列表）是一种使用哈希函数组织数据，以支持快速"),n("strong",[t._v("插入")]),t._v("和"),n("strong",[t._v("搜索")]),t._v("的数据结构。")]),t._v(" "),n("p",[t._v("有两种不同类型的哈希表：哈希集合和哈希映射。")]),t._v(" "),n("ul",[n("li",[t._v("哈希集合是"),n("strong",[t._v("集合")]),t._v("数据结构的实现之一，用于存储非重复值。")]),t._v(" "),n("li",[t._v("哈希映射是"),n("strong",[t._v("映射")]),t._v("数据结构的实现之一，用于存储(key, value)键值对。")])]),t._v(" "),n("p",[t._v("通过选择合适的哈希函数，哈希表可以在插入和搜索方面实现出色的性能。")]),t._v(" "),n("p",[t._v("在哈希表中主要思考以下问题：")]),t._v(" "),n("ul",[n("li",[t._v("哈希表的原理是什么？")]),t._v(" "),n("li",[t._v("如何设计哈希表？")]),t._v(" "),n("li",[t._v("如何使用哈希集来解决与重复相关的问题？")]),t._v(" "),n("li",[t._v("如何使用哈希映射按键聚合信息？")]),t._v(" "),n("li",[t._v("如何在使用哈希表时设计正确的键？")])]),t._v(" "),n("h2",{attrs:{id:"哈希表的原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#哈希表的原理"}},[t._v("#")]),t._v(" 哈希表的原理")]),t._v(" "),n("p",[t._v("哈希表的关键思想是使用哈希函数将键映射到存储桶。更确切地说，")]),t._v(" "),n("ul",[n("li",[t._v("当我们插入一个新的键时，哈希函数将决定该键应该分配到哪个桶中，并将该键存储在相应的桶中；")]),t._v(" "),n("li",[t._v("当我们想要搜索一个键时，哈希表将使用相同的哈希函数来查找对应的桶，并只在特定的桶中进行搜索。")])]),t._v(" "),n("h3",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),n("p",[t._v("在示例中，我们使用 y = x ％ 5 作为哈希函数，表示其中 x 是键值，y 是分配的桶的索引。\n让我们使用这个例子来完成插入和搜索策略：")]),t._v(" "),n("ul",[n("li",[t._v("插入：我们通过哈希函数解析键，将它们映射到相应的桶中。\n"),n("ul",[n("li",[t._v("例如，1987 分配给桶 2，而 24 分配给桶 4。")])])]),t._v(" "),n("li",[t._v("搜索：我们通过相同的哈希函数解析键，并仅在特定存储桶中搜索。\n"),n("ul",[n("li",[t._v("如果我们搜索 1987，我们将使用相同的哈希函数将 1987 映射到 2。因此我们在桶 2 中搜索，我们在那个桶中成功找到了 1987。")]),t._v(" "),n("li",[t._v("如果我们搜索 23，将映射 23 到 3，并在桶 3 中搜索。我们发现 23 不在桶 3 中，这意味着 23 不在哈希表中。")])])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(484),alt:"image-20200903014440034"}})]),t._v(" "),n("h2",{attrs:{id:"设计哈希表的关键因素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计哈希表的关键因素"}},[t._v("#")]),t._v(" 设计哈希表的关键因素")]),t._v(" "),n("h3",{attrs:{id:"_1-哈希函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-哈希函数"}},[t._v("#")]),t._v(" 1.哈希函数")]),t._v(" "),n("p",[t._v("如上面的示例，使用 y = x % 5 作为哈希函数，其中 x 是键值，y 是分配的桶的索引。")]),t._v(" "),n("p",[t._v("哈希函数的设计是一个开放的问题。其思想是尽可能将键分配到桶中，理想情况下，完美的哈希函数将是键和桶之间的一对一映射。然而，在大多数情况下，哈希函数并不完美，它需要在桶的数量和桶的容量之间进行权衡。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(485),alt:"image-20200903015703657"}})]),t._v(" "),n("h3",{attrs:{id:"_2-冲突解决"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-冲突解决"}},[t._v("#")]),t._v(" 2.冲突解决")]),t._v(" "),n("p",[t._v("理想情况下，如果我们的哈希函数是完美的一对一映射，我们将不需要处理冲突。不幸的是，在大多数情况下，冲突几乎是不可避免的。例如，在我们之前的哈希函数 y = x ％ 5 中，1987 和 2 都分配给了桶 2，这就是一个冲突。")]),t._v(" "),n("p",[t._v("冲突解决算法应该解决以下几个问题：")]),t._v(" "),n("ul",[n("li",[t._v("如何组织在同一个桶中的值？")]),t._v(" "),n("li",[t._v("如果为同一个桶分配了太多的值，该怎么办？")]),t._v(" "),n("li",[t._v("如何在特定的桶中搜索目标值？")])]),t._v(" "),n("p",[t._v("根据我们的哈希函数，这些问题与"),n("strong",[t._v("桶的容量")]),t._v("和"),n("strong",[t._v("可能映射到同一个桶的键的数目")]),t._v("有关。")]),t._v(" "),n("p",[t._v("让我们假设存储最大键数的桶有 N 个键，通常，")]),t._v(" "),n("ul",[n("li",[t._v("如果 N 是常数且很小，我们可以简单地使用一个数组将键存储在同一个桶中。")]),t._v(" "),n("li",[t._v("如果 N 是可变的或很大，我们可能需要使用高度平衡的二叉树来代替。")])]),t._v(" "),n("h2",{attrs:{id:"设计哈希集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计哈希集合"}},[t._v("#")]),t._v(" 设计哈希集合")]),t._v(" "),n("p",[t._v("设计应该包含以下的功能：")]),t._v(" "),n("ul",[n("li",[t._v("add(value)：向哈希集合中插入一个值。")]),t._v(" "),n("li",[t._v("contains(value) ：返回哈希集合中是否存在这个值。")]),t._v(" "),n("li",[t._v("remove(value)：将给定值从哈希集合中删除。如果哈希集合中没有这个值，什么也不做。")])]),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://leetcode-cn.com/problems/design-hashset",target:"_blank",rel:"noopener noreferrer"}},[t._v("705: design-hashset"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("使用 object 是一种最简单的实现方式。")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyHashSet")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("remove")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("contains")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("h2",{attrs:{id:"设计哈希映射"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计哈希映射"}},[t._v("#")]),t._v(" 设计哈希映射")]),t._v(" "),n("p",[t._v("设计应该包含以下的功能")]),t._v(" "),n("ul",[n("li",[t._v("put(key, value)：向哈希映射中插入(键,值)的数值对。如果键对应的值已经存在，更新这个值。")]),t._v(" "),n("li",[t._v("get(key)：返回给定的键所对应的值，如果映射中不包含这个键，返回-1。")]),t._v(" "),n("li",[t._v("remove(key)：如果映射中存在这个键，删除这个数值对。")])]),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://leetcode-cn.com/problems/design-hashmap",target:"_blank",rel:"noopener noreferrer"}},[t._v("706: design-hashmap"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("解答方式同上，")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyHashMap")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("put")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("remove")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("h2",{attrs:{id:"复杂度分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#复杂度分析"}},[t._v("#")]),t._v(" 复杂度分析")]),t._v(" "),n("p",[t._v("如果总共有 M 个键，那么在使用哈希表时，可以很容易地达到 O(M) 的空间复杂度。但是哈希表的时间复杂度与设计有很强的关系。")]),t._v(" "),n("p",[t._v("我们中的大多数人可能已经在每个桶中使用数组来将值存储在同一个桶中，")]),t._v(" "),n("ul",[n("li",[t._v("理想情况下，桶的大小足够小时，可以看作是一个常数。插入和搜索的时间复杂度都是 O(1)。")]),t._v(" "),n("li",[t._v("但在最坏的情况下，桶大小的最大值将为 N。插入时时间复杂度为 O(1)，搜索时为 O(N)。")])]),t._v(" "),n("h2",{attrs:{id:"内置哈希表的原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内置哈希表的原理"}},[t._v("#")]),t._v(" 内置哈希表的原理")]),t._v(" "),n("p",[t._v("内置哈希表的典型设计是：")]),t._v(" "),n("ul",[n("li",[t._v("键值可以是任何"),n("strong",[t._v("可哈希化")]),t._v("的类型。并且属于可哈希类型的值将具有"),n("strong",[t._v("哈希码")]),t._v("。此哈希码将用于映射函数以获取存储区索引。")]),t._v(" "),n("li",[t._v("每个桶包含一个数组，用于在初始时将所有值存储在同一个桶中。")]),t._v(" "),n("li",[t._v("如果在同一个桶中有太多的值，这些值将被保留在一个高度平衡的二叉树搜索树中。")])]),t._v(" "),n("p",[t._v("插入和搜索的平均时间复杂度仍为 O(1)。最坏情况下插入和搜索的时间复杂度是 O(logN)，使用高度平衡的 BST。这是在插入和搜索之间的一种权衡。")]),t._v(" "),n("h2",{attrs:{id:"题目分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#题目分类"}},[t._v("#")]),t._v(" 题目分类")]),t._v(" "),n("h3",{attrs:{id:"_1-哈希集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-哈希集合"}},[t._v("#")]),t._v(" 1.哈希集合")]),t._v(" "),n("p",[n("a",{attrs:{href:"./136.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97"}},[t._v("136.只出现一次的数字")])]),t._v(" "),n("p",[n("a",{attrs:{href:"./202.%E5%BF%AB%E4%B9%90%E6%95%B0"}},[t._v("202.快乐数")])]),t._v(" "),n("h3",{attrs:{id:"_2-哈希映射"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-哈希映射"}},[t._v("#")]),t._v(" 2.哈希映射")]),t._v(" "),n("h3",{attrs:{id:"_3-设计键"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-设计键"}},[t._v("#")]),t._v(" 3.设计键")]),t._v(" "),n("h3",{attrs:{id:"_4-其它"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-其它"}},[t._v("#")]),t._v(" 4.其它")])])}),[],!1,null,null,null);s.default=e.exports}}]);